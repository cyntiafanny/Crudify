[{"C:\\Users\\DELL\\crud-app\\src\\reportWebVitals.ts":"1","C:\\Users\\DELL\\crud-app\\src\\pages\\UserModal.tsx":"2","C:\\Users\\DELL\\crud-app\\src\\pages\\App.tsx":"3","C:\\Users\\DELL\\crud-app\\src\\action.ts":"4","C:\\Users\\DELL\\crud-app\\src\\reducers.ts":"5","C:\\Users\\DELL\\crud-app\\src\\index.tsx":"6","C:\\Users\\DELL\\crud-app\\src\\pages\\ConfirmationModal.tsx":"7","C:\\Users\\DELL\\crud-app\\src\\pages\\SuccesModal.tsx":"8"},{"size":425,"mtime":1610018899753,"results":"9","hashOfConfig":"10"},{"size":6020,"mtime":1610185582451,"results":"11","hashOfConfig":"10"},{"size":6526,"mtime":1610185921463,"results":"12","hashOfConfig":"10"},{"size":1480,"mtime":1610141895337,"results":"13","hashOfConfig":"10"},{"size":1045,"mtime":1610141325103,"results":"14","hashOfConfig":"10"},{"size":835,"mtime":1610149063681,"results":"15","hashOfConfig":"10"},{"size":1139,"mtime":1610136968282,"results":"16","hashOfConfig":"10"},{"size":1233,"mtime":1610173231850,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fdfvct",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},"C:\\Users\\DELL\\crud-app\\src\\reportWebVitals.ts",[],"C:\\Users\\DELL\\crud-app\\src\\pages\\UserModal.tsx",["36","37"],"C:\\Users\\DELL\\crud-app\\src\\pages\\App.tsx",["38"],"C:\\Users\\DELL\\crud-app\\src\\action.ts",[],"C:\\Users\\DELL\\crud-app\\src\\reducers.ts",[],"C:\\Users\\DELL\\crud-app\\src\\index.tsx",[],["39","40"],"C:\\Users\\DELL\\crud-app\\src\\pages\\ConfirmationModal.tsx",[],"C:\\Users\\DELL\\crud-app\\src\\pages\\SuccesModal.tsx",["41"],"import {Button, Modal, ModalContent} from \"semantic-ui-react\";\r\nimport {State, User} from \"../state\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateSuccessModalStatus} from \"../action\";\r\nimport {connect} from \"react-redux\";\r\n\r\ninterface SuccessModalProps {\r\n  dispatch: Dispatch;\r\n  isOpen: boolean;\r\n  content: string;\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    isOpen: state.control.successModal.isOpen,\r\n    content: state.control.successModal.content\r\n  };\r\n};\r\n\r\nconst SuccessModal: React.FC<SuccessModalProps> = (props: SuccessModalProps) => {\r\n  const handleCloseSuccessModal = () => {\r\n    props.dispatch(props.dispatch(updateSuccessModalStatus({\r\n      content: \"\",\r\n      isOpen: false\r\n    })));\r\n  };\r\n\r\n  return (\r\n    <Modal open={props.isOpen}\r\n           onClose={handleCloseSuccessModal}\r\n           size='tiny'\r\n           className='modal-container'\r\n    >\r\n      <ModalContent>\r\n        <h3>{props.content}</h3>\r\n      </ModalContent>\r\n\r\n      <Modal.Actions>\r\n        <Button onClick={handleCloseSuccessModal} style={{color: \"white\", backgroundColor: \"#ffcd34\"}}>Close</Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default connect (mapStateToProps) (SuccessModal);\r\n",{"ruleId":"42","severity":1,"message":"43","line":36,"column":6,"nodeType":"44","endLine":36,"endColumn":20,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":103,"column":11,"nodeType":"48","endLine":104,"endColumn":41},{"ruleId":"42","severity":1,"message":"49","line":42,"column":6,"nodeType":"44","endLine":42,"endColumn":16,"suggestions":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":16,"nodeType":"57","messageId":"58","endLine":2,"endColumn":20},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedUser'. Either include it or remove the dependency array.","ArrayExpression",["59"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'userList.length'. Either include it or remove the dependency array.",["60"],"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'User' is defined but never used.","Identifier","unusedVar",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props.isOpen, selectedUser]",{"range":"67","text":"68"},"Update the dependencies array to be: [dispatch, userList.length]",{"range":"69","text":"70"},[1299,1313],"[props.isOpen, selectedUser]",[1446,1456],"[dispatch, userList.length]"]